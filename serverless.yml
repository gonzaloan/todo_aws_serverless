org: gonzaloan
app: todo-aws
service: todo-aws
frameworkVersion: '3'

custom:
  tableName: 'todo-table-${sls:stage}'
  apiGatewayAccountRole:
    Type: "Custom::ApiGatewayAccountRole"
    Properties:
      ServiceToken: !GetAtt ApiGatewayAccountRole.Arn
provider:
  name: aws
  runtime: nodejs18.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ UsersTable, Arn ]
  environment:
    TODO_TABLE: ${self:custom.tableName}

functions:
  create:
    handler: handler/createTodo.createTodo
    events:
      - http:
          path: /todos
          method: post
          cors: true
  list:
    handler: handler/listTodo.listTodo
    events:
      - http:
          path: /todos
          method: get
          cors: true
  get:
    handler: handler/getTodo.getTodo
    events:
      - http:
          path: /todos/{id}
          method: get
          cors: true
  delete:
    handler: handler/deleteTodo.deleteTodo
    events:
      - http:
          path: /todos/{id}
          method: delete
          cors: true
  update:
    handler: handler/updateTodo.updateTodo
    events:
      - http:
          path: /todos/{id}
          method: put
          cors: true
resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableName}
    ApiGatewayAccountRole:
      Type: "AWS::IAM::Role"
      Properties:
        RoleName: serverlessApiGatewayCloudWatchRole
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Principal:
                Service: "apigateway.amazonaws.com"
              Action: "sts:AssumeRole"
        Policies:
          - PolicyName: ApiGatewayCloudWatchLogsPolicy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: "Allow"
                  Action:
                    - "logs:CreateLogGroup"
                    - "logs:CreateLogStream"
                    - "logs:PutLogEvents"
                  Resource: "*"